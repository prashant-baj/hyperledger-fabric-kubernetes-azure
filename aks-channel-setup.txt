  ##create_channel_MSP
  ##aggregate_channel_MSP
  ##launch_admin_CLIs

  ##create_genesis_block
  ##join_peers
  
  
  ## create_channel_org0_MSP
  kubectl exec deploy/org0-ecert-ca -i -- /bin/sh

  mkdir -p /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/cacerts
  cp \
    $FABRIC_CA_CLIENT_HOME/org0-ecert-ca/rcaadmin/msp/cacerts/org0-ecert-ca.pem \
    /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/cacerts
  
  mkdir -p /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/tlscacerts
  cp \
    $FABRIC_CA_CLIENT_HOME/tls-ca/tlsadmin/msp/cacerts/org0-tls-ca.pem \
    /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/tlscacerts
  
  echo "NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org0-ecert-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org0-ecert-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org0-ecert-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org0-ecert-ca.pem
      OrganizationalUnitIdentifier: orderer "> /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/config.yaml
      
  
#### create_channel_org1_MSP
  kubectl exec deploy/org1-ecert-ca -i -- /bin/sh

  mkdir -p /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/msp/cacerts
  cp \
    $FABRIC_CA_CLIENT_HOME/org1-ecert-ca/rcaadmin/msp/cacerts/org1-ecert-ca.pem \
    /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/msp/cacerts
  
  mkdir -p /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/msp/tlscacerts
  cp \
    $FABRIC_CA_CLIENT_HOME/tls-ca/tlsadmin/msp/cacerts/org1-tls-ca.pem \
    /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/msp/tlscacerts
  
  echo "NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org1-ecert-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org1-ecert-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org1-ecert-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org1-ecert-ca.pem
      OrganizationalUnitIdentifier: orderer "> /var/hyperledger/fabric/organizations/peerOrganizations/org1.example.com/msp/config.yaml
      
#### create_channel_org2_MSP
  kubectl exec deploy/org2-ecert-ca -i -- /bin/sh

  mkdir -p /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/msp/cacerts
  cp \
    $FABRIC_CA_CLIENT_HOME/org2-ecert-ca/rcaadmin/msp/cacerts/org2-ecert-ca.pem \
    /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/msp/cacerts
  
  mkdir -p /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/msp/tlscacerts
  cp \
    $FABRIC_CA_CLIENT_HOME/tls-ca/tlsadmin/msp/cacerts/org2-tls-ca.pem \
    /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/msp/tlscacerts
  
  echo "NodeOUs:
    Enable: true
    ClientOUIdentifier:
      Certificate: cacerts/org2-ecert-ca.pem
      OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
      Certificate: cacerts/org2-ecert-ca.pem
      OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
      Certificate: cacerts/org2-ecert-ca.pem
      OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
      Certificate: cacerts/org2-ecert-ca.pem
      OrganizationalUnitIdentifier: orderer "> /var/hyperledger/fabric/organizations/peerOrganizations/org2.example.com/msp/config.yaml
      

#######################################
## aggregate_channel_MSP

  rm -rf ./build/msp/
  mkdir -p ./build/msp
  
  kubectl exec deploy/org0-ecert-ca -- tar zcvf - -C /var/hyperledger/fabric organizations/ordererOrganizations/org0.example.com/msp > build/msp/msp-org0.example.com.tgz
  kubectl exec deploy/org1-ecert-ca -- tar zcvf - -C /var/hyperledger/fabric organizations/peerOrganizations/org1.example.com/msp > build/msp/msp-org1.example.com.tgz
  kubectl exec deploy/org2-ecert-ca -- tar zcvf - -C /var/hyperledger/fabric organizations/peerOrganizations/org2.example.com/msp > build/msp/msp-org2.example.com.tgz

  kubectl delete configmap msp-config || true
  kubectl create configmap msp-config --from-file=build/msp/
  
  
#################################
##launch_admin_CLIs

  kubectl apply -f kube/org0/org0-admin-cli.yaml
  kubectl apply -f kube/org1/org1-admin-cli.yaml
  kubectl apply -f kube/org2/org2-admin-cli.yaml

#################################
##create_genesis_block

kubectl exec deploy/org0-admin-cli -i -- /bin/bash

#mychannel
  configtxgen -profile TwoOrgsApplicationGenesis -channelID mychannel -outputBlock genesis_block.pb
  osnadmin channel join --orderer-address org0-orderer1:9443 --channelID mychannel --config-block genesis_block.pb
  osnadmin channel join --orderer-address org0-orderer2:9443 --channelID mychannel --config-block genesis_block.pb
  osnadmin channel join --orderer-address org0-orderer3:9443 --channelID mychannel --config-block genesis_block.pb



#################################
##join_peers
## org1


  kubectl exec deploy/org1-admin-cli -i -- /bin/bash
  
 
  # Fetch the genesis block from an orderer
  peer channel \
    fetch oldest \
    genesis_block.pb \
    -c mychannel \
    -o org0-orderer1:6050 \
    --tls --cafile /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/tlscacerts/org0-tls-ca.pem

  # Join peer1 to the channel.
  CORE_PEER_ADDRESS=org1-peer1:7051 \
  peer channel \
    join \
    -b genesis_block.pb \
    -o org0-orderer1:6050 \
    --tls --cafile /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/tlscacerts/org0-tls-ca.pem

  # Join peer2 to the channel.
  CORE_PEER_ADDRESS=org1-peer2:7051 \
  peer channel \
    join \
    -b genesis_block.pb \
    -o org0-orderer1:6050 \
    --tls --cafile /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/tlscacerts/org0-tls-ca.pem


## org2


  kubectl exec deploy/org2-admin-cli -i -- /bin/bash
  
 
  # Fetch the genesis block from an orderer
  peer channel \
    fetch oldest \
    genesis_block.pb \
    -c mychannel \
    -o org0-orderer1:6050 \
    --tls --cafile /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/tlscacerts/org0-tls-ca.pem

  # Join peer1 to the channel.
  CORE_PEER_ADDRESS=org2-peer1:7051 \
  peer channel \
    join \
    -b genesis_block.pb \
    -o org0-orderer1:6050 \
    --tls --cafile /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/tlscacerts/org0-tls-ca.pem

  # Join peer2 to the channel.
  CORE_PEER_ADDRESS=org2-peer2:7051 \
  peer channel \
    join \
    -b genesis_block.pb \
    -o org0-orderer1:6050 \
    --tls --cafile /var/hyperledger/fabric/organizations/ordererOrganizations/org0.example.com/msp/tlscacerts/org0-tls-ca.pem







  